type daemon struct {
	handler http.Handler
	proxy   config.Proxy
}

+func (d *daemon) ServeHTTP(rw http.ResponseWriter, req *http.Request) {
+	d.handler.ServeHTTP(rw, req)
+}
+
 func (d *daemon) Start() {
 	log.Printf("Listening on %s", d.proxy.Listen)
-	log.Fatal(http.ListenAndServe(d.proxy.Listen, d.handler))
+	log.Fatal(http.ListenAndServe(d.proxy.Listen, d))
 	return
 }

 func (d *daemon) LoadConfig(newConfig config.Config) error {
 	d.proxy = newConfig.Proxy
 	target, _ := url.Parse(d.proxy.Host) // already tested for invalid Host
 	proxy := httputil.NewSingleHostReverseProxy(target)
