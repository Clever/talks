Interfaces will Save the Future
Case Study: Sphinx Rate Limiter

21 Jan 2015


Mohit Gupta & Alex Zylman
@mohitgupta
@amzylman

Clever
https://clever.com
https://github.com/Clever


* But what is Sphinx?
- HTTP rate limiter
- Based on leakybucket algorithm (supporting both Redis and in-memory stores)
- Supports matching on request headers and IP address
- Transparent limiting through X-Rate-Limit headers
- Low request latencies (~15 ms)
.image logo.png _ 250


* Short Story: A Request in Sphinx Land

* Defining a Rate Limit

- Number of allowed requests over a specified interval
- Rules to test if a limit should be applied to an incoming request
- Rules for genenerating a dynamic key based on information in an incoming request

* Example

    name: limit-special-things:
    path matches `/special/*`
    allow 200 requests every 15 seconds
    limit on IP address

.code request-in-sphinx/buckets.md

* Benefits of ♥ interfaces ♥
- Improved collaboration
- Easier testing
- Swappable behaviors
- Plugins/components


* Collaboration through Interfaces

* Collaboration through Interfaces

- "Who works on what" is a hard problem when dealing with dependencies between components
- With defined interfaces, you can use mock implementations
- Better for both testing and collaboration


* Collaboration through Interfaces: Example
.code rate_limiter_examples/rate_limiter.go /START OMIT/,/END OMIT/


* Collaboration through Interfaces: Example
.code rate_limiter_examples/rate_limiter_mock.go /START OMIT/,/END OMIT/


* Collaboration through Interfaces: Example
.code rate_limiter_examples/rate_limiter_test.go /START OMIT/,/END OMIT/


* Easier Testing

* Easier Testing

- Write tests against your interface
- Each implementations of that interface can use the same tests
- Keeps implementations more reliable
- Find a bug in one, can write a test for it and know that all implementations are bug-free


* Easier Testing: Example
.code interface_tests/leakybucket.go /START OMIT/,/END OMIT/


* Easier Testing: Example
.code interface_tests/leakybucket_test.go /START OMIT/,/END OMIT/


* Easier Testing: Example
Tests for the memory implementation:

.code interface_tests/memory_tests.go /START OMIT/,/END OMIT/

Tests for the redis implementation:

.code interface_tests/redis_tests.go /START OMIT/,/END OMIT/

* Swappable Behaviors

* Swappable Behaviors

- Sometimes you want different behavior in different situations
- Interfaces allow you to do that transparently

.code http_limiter_examples/constructors.go /START OMIT/,/END OMIT/


# * [Mohit] Plugins
# MatcherFactory


* Bonus: Adding dynamic configuration reload
.code livereload_diff/diff


# If time:
# * [Alex?] Benchmarking
